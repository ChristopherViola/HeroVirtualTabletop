<UserControl x:Class="Module.HeroVirtualTabletop.Movements.MovementEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:Framework.WPF.Behaviors;assembly=Framework.WPF"
             xmlns:movements="clr-namespace:Module.HeroVirtualTabletop.Movements"             
             xmlns:enumerations="clr-namespace:Module.HeroVirtualTabletop.Library.Enumerations"
             xmlns:bindings="clr-namespace:Framework.WPF.Binding;assembly=Framework.WPF"
             xmlns:extensions="clr-namespace:Framework.WPF.Extensions;assembly=Framework.WPF"
             xmlns:converters="clr-namespace:Module.Shared.Converters;assembly=Module.Shared"
             xmlns:localconverters="clr-namespace:Module.HeroVirtualTabletop.Library.Converters"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             mc:Ignorable="d" behaviors:CommandBehavior.Event="Loaded" behaviors:CommandBehavior.Command="{Binding LoadResourcesCommand}" behaviors:CommandBehavior.CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Module.Shared;Component/Resources/ResourceDictionary/GeneralResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityInvertConverter x:Key="BooleanToVisibilityInvertConverter"/>
            <localconverters:StringComparerToVisibilityConverter x:Key="resourcesTypeConverter"/>
            <localconverters:MovementDirectionToIconTextConverter x:Key="MovementDirectionToIconTextConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Button x:Name="closeBtn" Grid.Row="0" Grid.Column="2"  HorizontalAlignment="Right" Content="&#xf00d;" ToolTip="Close" Command="{Binding CloseEditorCommand}" Margin="0,0,2,0" Style="{StaticResource CloseButtonStyle}"/>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ComboBox Grid.Row="0" Grid.Column="0" MinWidth="120" IsEnabled="{Binding CanEditMovementOptions}"
                          Name="comboBoxMovements" ItemsSource="{Binding CurrentCharacter.Movements}" DisplayMemberPath="Name" SelectedValue="{Binding CurrentMovement}">
                <ComboBox.InputBindings>
                    <KeyBinding Key="Space" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=movements:MovementEditorView}, Path=DataContext.EnterMovementEditModeCommand}" CommandParameter="{Binding ElementName=comboBoxMovements}"/>
                </ComboBox.InputBindings>
            </ComboBox>
            <TextBox Name="textBoxName" Grid.Row="0" Grid.Column="0" Visibility="Hidden" Text="{Binding Path=CurrentMovement.Name, UpdateSourceTrigger=Explicit}">
                <behaviors:CommandBehaviorCollection.Behaviors>
                    <behaviors:BehaviorBinding Event="LostFocus" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=movements:MovementEditorView}, Path=DataContext.SubmitMovementRenameCommand}" CommandParameter="{Binding ElementName=textBoxName}"/>
                </behaviors:CommandBehaviorCollection.Behaviors>
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=movements:MovementEditorView}, Path=DataContext.SubmitMovementRenameCommand}" CommandParameter="{Binding ElementName=textBoxName}"/>
                    <KeyBinding Key="Escape" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=movements:MovementEditorView}, Path=DataContext.CancelMovementEditModeCommand}" CommandParameter="{Binding ElementName=textBoxName}"/>
                </TextBox.InputBindings>
            </TextBox>
            <CheckBox Grid.Row="1" Grid.Column="0" Name="chkBoxDefault" IsChecked="{Binding IsDefaultMovementLoaded}" Content="Default"  HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding SetDefaultMovementCommand}"/>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=IconButton}"></Style>
                </StackPanel.Resources>
                <Button x:Name="btnPlayMovement" Content="&#xf04b;" ToolTip="Demo Movement" Command="{Binding DemoMovementCommand}" />
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" HorizontalAlignment="Right" >
                <Button Style="{StaticResource AddButtonStyle}" ToolTip="Add Movement" Command="{Binding AddMovementCommand}"/>
                <Button Style="{StaticResource RemoveButtonStyle}" ToolTip="Remove Movement" Command="{Binding RemoveMovementCommand}"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2">
            <ListBox ItemsSource="{Binding CurrentMovement.MovementMembers}"
                    Background="Transparent" TextElement.Foreground="White" 
                     SelectedItem="{Binding SelectedMovementMember}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="360"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" FontFamily="{StaticResource FontFamily_FontAwesome}" Cursor="Hand" Text="{Binding MovementDirection, Converter={StaticResource MovementDirectionToIconTextConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=movements:MovementEditorView}, Path=DataContext.LoadAbilityEditorCommand}" MouseAction="LeftClick"/>
                                </TextBlock.InputBindings>
                            </TextBlock>
                            <TextBlock Grid.Column="1" Text="{Binding MemberAbility.DisplayName}" TextTrimming="CharacterEllipsis" Style="{StaticResource TextBlockDefaultStyle}"/>
                            <Button Grid.Column="2" Background="Transparent" Foreground="Green" FontFamily="{StaticResource FontFamily_FontAwesome}" Content="&#xf04b;" ToolTip="Play" Command="{Binding DemoDirectionalMoveCommand}" HorizontalAlignment="Right" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>
            </Grid>
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Height="Auto" Name="txtBoxAnimationResourceFilter" HorizontalAlignment="Stretch" Margin="5"
                     Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <DataGrid Grid.Row="1" x:Name="dataGridAbilityReferences"
                          MaxWidth="400"
                          Background="Transparent" RowBackground="Transparent" Margin="5" BorderBrush="#FF1144FF"
                          ItemsSource="{Binding ReferenceAbilitiesCVS.View}"
                          SelectionUnit="FullRow" AutoGenerateColumns="False" IsEnabled="{Binding CanEditMovementOptions}"
                          SelectionMode="Single" CanUserResizeRows="False"
                          SelectedValue="{Binding SelectedMovementMember.MemberAbility.Resource}"
                            IsSynchronizedWithCurrentItem="True" 
                      >
                <i:Interaction.Behaviors>
                    <behaviors:ScrollIntoViewForDataGrid />
                </i:Interaction.Behaviors>
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Foreground" Value="White"></Setter>
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF1144FF" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Character" Binding="{Binding Reference.Owner.Name}" Width="auto"></DataGridTextColumn>
                    <DataGridTextColumn Header="Ability" Binding="{Binding Reference.Name}" Width="*"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
